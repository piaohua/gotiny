// Code generated by protoc-gen-go.
// source: chat.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 房间广播文字聊天
type CChatText struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2003" json:"code,omitempty"`
	Content          []byte  `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CChatText) Reset()                    { *m = CChatText{} }
func (m *CChatText) String() string            { return proto.CompactTextString(m) }
func (*CChatText) ProtoMessage()               {}
func (*CChatText) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

const Default_CChatText_Code uint32 = 2003

func (m *CChatText) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CChatText_Code
}

func (m *CChatText) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 广播文字聊天
type SChatText struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2003" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,opt,name=seat" json:"seat,omitempty"`
	Userid           *string `protobuf:"bytes,3,opt,name=userid" json:"userid,omitempty"`
	Content          []byte  `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SChatText) Reset()                    { *m = SChatText{} }
func (m *SChatText) String() string            { return proto.CompactTextString(m) }
func (*SChatText) ProtoMessage()               {}
func (*SChatText) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

const Default_SChatText_Code uint32 = 2003
const Default_SChatText_Error uint32 = 0

func (m *SChatText) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SChatText_Code
}

func (m *SChatText) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SChatText) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *SChatText) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SChatText) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SChatText_Error
}

// 房间广播语音聊天
type CChatVoice struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2004" json:"code,omitempty"`
	Content          []byte  `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CChatVoice) Reset()                    { *m = CChatVoice{} }
func (m *CChatVoice) String() string            { return proto.CompactTextString(m) }
func (*CChatVoice) ProtoMessage()               {}
func (*CChatVoice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

const Default_CChatVoice_Code uint32 = 2004

func (m *CChatVoice) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CChatVoice_Code
}

func (m *CChatVoice) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 广播语音聊天
type SChatVoice struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2004" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,opt,name=seat" json:"seat,omitempty"`
	Userid           *string `protobuf:"bytes,3,opt,name=userid" json:"userid,omitempty"`
	Content          []byte  `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SChatVoice) Reset()                    { *m = SChatVoice{} }
func (m *SChatVoice) String() string            { return proto.CompactTextString(m) }
func (*SChatVoice) ProtoMessage()               {}
func (*SChatVoice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

const Default_SChatVoice_Code uint32 = 2004
const Default_SChatVoice_Error uint32 = 0

func (m *SChatVoice) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SChatVoice_Code
}

func (m *SChatVoice) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SChatVoice) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *SChatVoice) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SChatVoice) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SChatVoice_Error
}

// 世界广播
type SBroadcast struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2006" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	Num              *uint32 `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	Content          []byte  `protobuf:"bytes,4,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SBroadcast) Reset()                    { *m = SBroadcast{} }
func (m *SBroadcast) String() string            { return proto.CompactTextString(m) }
func (*SBroadcast) ProtoMessage()               {}
func (*SBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

const Default_SBroadcast_Code uint32 = 2006

func (m *SBroadcast) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBroadcast_Code
}

func (m *SBroadcast) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *SBroadcast) GetNum() uint32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *SBroadcast) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 公告列表
type CNotice struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2008" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CNotice) Reset()                    { *m = CNotice{} }
func (m *CNotice) String() string            { return proto.CompactTextString(m) }
func (*CNotice) ProtoMessage()               {}
func (*CNotice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

const Default_CNotice_Code uint32 = 2008

func (m *CNotice) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CNotice_Code
}

type SNotice struct {
	Code             *uint32   `protobuf:"varint,1,opt,name=code,def=2008" json:"code,omitempty"`
	List             []*Notice `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Error            *uint32   `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SNotice) Reset()                    { *m = SNotice{} }
func (m *SNotice) String() string            { return proto.CompactTextString(m) }
func (*SNotice) ProtoMessage()               {}
func (*SNotice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

const Default_SNotice_Code uint32 = 2008
const Default_SNotice_Error uint32 = 0

func (m *SNotice) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SNotice_Code
}

func (m *SNotice) GetList() []*Notice {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SNotice) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SNotice_Error
}

type Notice struct {
	Rtype            *uint32 `protobuf:"varint,1,req,name=rtype" json:"rtype,omitempty"`
	Acttype          *uint32 `protobuf:"varint,2,req,name=acttype" json:"acttype,omitempty"`
	Content          []byte  `protobuf:"bytes,3,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Notice) Reset()                    { *m = Notice{} }
func (m *Notice) String() string            { return proto.CompactTextString(m) }
func (*Notice) ProtoMessage()               {}
func (*Notice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *Notice) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *Notice) GetActtype() uint32 {
	if m != nil && m.Acttype != nil {
		return *m.Acttype
	}
	return 0
}

func (m *Notice) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*CChatText)(nil), "protocol.CChatText")
	proto.RegisterType((*SChatText)(nil), "protocol.SChatText")
	proto.RegisterType((*CChatVoice)(nil), "protocol.CChatVoice")
	proto.RegisterType((*SChatVoice)(nil), "protocol.SChatVoice")
	proto.RegisterType((*SBroadcast)(nil), "protocol.SBroadcast")
	proto.RegisterType((*CNotice)(nil), "protocol.CNotice")
	proto.RegisterType((*SNotice)(nil), "protocol.SNotice")
	proto.RegisterType((*Notice)(nil), "protocol.Notice")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0xc9, 0xda, 0xae, 0xf6, 0xd3, 0xc1, 0x08, 0xa2, 0x39, 0x8e, 0xea, 0xa1, 0xa7, 0x52,
	0xa6, 0x88, 0x78, 0x51, 0xec, 0xdd, 0x43, 0x2a, 0xde, 0x63, 0x1a, 0x58, 0x61, 0x36, 0x23, 0xcd,
	0x40, 0xef, 0xfa, 0x7f, 0x9b, 0xa6, 0xad, 0x6b, 0xa5, 0xb0, 0x5d, 0x76, 0x6a, 0xde, 0xf7, 0x9a,
	0xbc, 0xf7, 0x0b, 0x01, 0xe0, 0x2b, 0xa6, 0xe3, 0x8d, 0x92, 0x5a, 0xe2, 0x13, 0xfb, 0xe1, 0x72,
	0x1d, 0x3e, 0x42, 0x90, 0xa6, 0xc6, 0x78, 0x15, 0x9f, 0x1a, 0x13, 0x70, 0xb9, 0xcc, 0x05, 0x41,
	0x0b, 0x14, 0xcd, 0x1e, 0xdc, 0x65, 0x92, 0xdc, 0x50, 0x3b, 0x31, 0x8e, 0xcf, 0x65, 0xa9, 0x45,
	0xa9, 0xc9, 0x64, 0x31, 0x89, 0xce, 0x68, 0x27, 0xc3, 0x6f, 0x04, 0x41, 0x76, 0xc0, 0x09, 0x18,
	0xdc, 0x4a, 0xb0, 0x7a, 0xbb, 0x71, 0xa8, 0x5d, 0xe3, 0x0b, 0x98, 0x6e, 0x2b, 0xa1, 0x8a, 0x9c,
	0x38, 0x66, 0x1a, 0xd0, 0x56, 0xf5, 0xd3, 0x5c, 0x63, 0xec, 0xd2, 0xf0, 0x25, 0x78, 0x42, 0x29,
	0xa9, 0x88, 0x67, 0x03, 0x50, 0x42, 0x1b, 0x1d, 0x3e, 0x01, 0x58, 0x8e, 0x37, 0x59, 0x70, 0x31,
	0x52, 0xe3, 0x76, 0x2f, 0xc8, 0x0f, 0x02, 0xc8, 0x0e, 0x39, 0xe2, 0xc8, 0x24, 0x2b, 0x53, 0xe3,
	0x59, 0x49, 0x96, 0x73, 0x56, 0x8d, 0x5d, 0xe8, 0x5d, 0x5b, 0xe3, 0x1c, 0x3c, 0xa5, 0xbf, 0x36,
	0xc2, 0x72, 0xcc, 0x68, 0x23, 0xf0, 0x1c, 0x9c, 0x72, 0xfb, 0x61, 0x5a, 0xd4, 0xb3, 0x7a, 0x39,
	0xac, 0x30, 0x20, 0xbe, 0x02, 0x3f, 0x7d, 0x91, 0x7a, 0x9c, 0xf6, 0xbe, 0x89, 0x09, 0xdf, 0xc1,
	0xcf, 0xf6, 0xfd, 0x84, 0xaf, 0xc1, 0x5d, 0x17, 0x55, 0x7d, 0x25, 0x4e, 0x74, 0xba, 0x9c, 0xc7,
	0xdd, 0xf3, 0x8a, 0x9b, 0x9d, 0xd4, 0xba, 0x3b, 0x64, 0xe7, 0x1f, 0x32, 0x85, 0x69, 0x1b, 0xf1,
	0x07, 0x85, 0xfa, 0x50, 0x06, 0x81, 0x71, 0xdd, 0x83, 0xed, 0x64, 0x1f, 0xce, 0x19, 0xc0, 0xfd,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x64, 0x1d, 0xda, 0x47, 0xef, 0x02, 0x00, 0x00,
}
