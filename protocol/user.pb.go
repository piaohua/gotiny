// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 获取游戏全局配置数据
type CConfig struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1020" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CConfig) Reset()                    { *m = CConfig{} }
func (m *CConfig) String() string            { return proto.CompactTextString(m) }
func (*CConfig) ProtoMessage()               {}
func (*CConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

const Default_CConfig_Code uint32 = 1020

func (m *CConfig) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CConfig_Code
}

type SConfig struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1020" json:"code,omitempty"`
	Imageurl         *string `protobuf:"bytes,2,req,name=imageurl" json:"imageurl,omitempty"`
	Version          *string `protobuf:"bytes,3,req,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SConfig) Reset()                    { *m = SConfig{} }
func (m *SConfig) String() string            { return proto.CompactTextString(m) }
func (*SConfig) ProtoMessage()               {}
func (*SConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

const Default_SConfig_Code uint32 = 1020

func (m *SConfig) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SConfig_Code
}

func (m *SConfig) GetImageurl() string {
	if m != nil && m.Imageurl != nil {
		return *m.Imageurl
	}
	return ""
}

func (m *SConfig) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

// 获取玩家的数据
type CUserData struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1022" json:"code,omitempty"`
	Userid           *string `protobuf:"bytes,2,req,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CUserData) Reset()                    { *m = CUserData{} }
func (m *CUserData) String() string            { return proto.CompactTextString(m) }
func (*CUserData) ProtoMessage()               {}
func (*CUserData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

const Default_CUserData_Code uint32 = 1022

func (m *CUserData) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CUserData_Code
}

func (m *CUserData) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

type SUserData struct {
	Code             *uint32   `protobuf:"varint,1,opt,name=code,def=1022" json:"code,omitempty"`
	Data             *UserData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Error            *uint32   `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SUserData) Reset()                    { *m = SUserData{} }
func (m *SUserData) String() string            { return proto.CompactTextString(m) }
func (*SUserData) ProtoMessage()               {}
func (*SUserData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

const Default_SUserData_Code uint32 = 1022
const Default_SUserData_Error uint32 = 0

func (m *SUserData) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SUserData_Code
}

func (m *SUserData) GetData() *UserData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SUserData) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SUserData_Error
}

// 获取虚拟货币
type CGetCurrency struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1024" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGetCurrency) Reset()                    { *m = CGetCurrency{} }
func (m *CGetCurrency) String() string            { return proto.CompactTextString(m) }
func (*CGetCurrency) ProtoMessage()               {}
func (*CGetCurrency) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

const Default_CGetCurrency_Code uint32 = 1024

func (m *CGetCurrency) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CGetCurrency_Code
}

type SGetCurrency struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1024" json:"code,omitempty"`
	Coin             *uint32 `protobuf:"varint,2,opt,name=coin" json:"coin,omitempty"`
	Diamond          *uint32 `protobuf:"varint,3,opt,name=diamond" json:"diamond,omitempty"`
	Roomcard         *uint32 `protobuf:"varint,4,opt,name=roomcard" json:"roomcard,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SGetCurrency) Reset()                    { *m = SGetCurrency{} }
func (m *SGetCurrency) String() string            { return proto.CompactTextString(m) }
func (*SGetCurrency) ProtoMessage()               {}
func (*SGetCurrency) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

const Default_SGetCurrency_Code uint32 = 1024

func (m *SGetCurrency) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SGetCurrency_Code
}

func (m *SGetCurrency) GetCoin() uint32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *SGetCurrency) GetDiamond() uint32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *SGetCurrency) GetRoomcard() uint32 {
	if m != nil && m.Roomcard != nil {
		return *m.Roomcard
	}
	return 0
}

// 绑定代理id
type CBuildAgent struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1026" json:"code,omitempty"`
	Userid           *string `protobuf:"bytes,2,req,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBuildAgent) Reset()                    { *m = CBuildAgent{} }
func (m *CBuildAgent) String() string            { return proto.CompactTextString(m) }
func (*CBuildAgent) ProtoMessage()               {}
func (*CBuildAgent) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

const Default_CBuildAgent_Code uint32 = 1026

func (m *CBuildAgent) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CBuildAgent_Code
}

func (m *CBuildAgent) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

type SBuildAgent struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1026" json:"code,omitempty"`
	Result           *uint32 `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SBuildAgent) Reset()                    { *m = SBuildAgent{} }
func (m *SBuildAgent) String() string            { return proto.CompactTextString(m) }
func (*SBuildAgent) ProtoMessage()               {}
func (*SBuildAgent) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

const Default_SBuildAgent_Code uint32 = 1026

func (m *SBuildAgent) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBuildAgent_Code
}

func (m *SBuildAgent) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// 1注册赠送,2开房消耗,3房间解散返还,
// 4充值购买,5,下注,6游戏收益,7上庄，
// 8下庄, 9后台操作,10玩家赠送,11破产补助
// 12存款,13取款,14取款抽成,15赠送,16赠送抽成
type SPushCurrency struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1028" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	Diamond          *int32  `protobuf:"varint,3,opt,name=diamond" json:"diamond,omitempty"`
	Coin             *int32  `protobuf:"varint,4,opt,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SPushCurrency) Reset()                    { *m = SPushCurrency{} }
func (m *SPushCurrency) String() string            { return proto.CompactTextString(m) }
func (*SPushCurrency) ProtoMessage()               {}
func (*SPushCurrency) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

const Default_SPushCurrency_Code uint32 = 1028

func (m *SPushCurrency) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPushCurrency_Code
}

func (m *SPushCurrency) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *SPushCurrency) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *SPushCurrency) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

// bank
type CBank struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1030" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	Amount           *uint32 `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Userid           *string `protobuf:"bytes,4,opt,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBank) Reset()                    { *m = CBank{} }
func (m *CBank) String() string            { return proto.CompactTextString(m) }
func (*CBank) ProtoMessage()               {}
func (*CBank) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

const Default_CBank_Code uint32 = 1030

func (m *CBank) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CBank_Code
}

func (m *CBank) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *CBank) GetAmount() uint32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CBank) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

type SBank struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1030" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	Amount           *uint32 `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Userid           *string `protobuf:"bytes,4,opt,name=userid" json:"userid,omitempty"`
	Balance          *uint32 `protobuf:"varint,5,opt,name=balance" json:"balance,omitempty"`
	Error            *uint32 `protobuf:"varint,6,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SBank) Reset()                    { *m = SBank{} }
func (m *SBank) String() string            { return proto.CompactTextString(m) }
func (*SBank) ProtoMessage()               {}
func (*SBank) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

const Default_SBank_Code uint32 = 1030
const Default_SBank_Error uint32 = 0

func (m *SBank) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBank_Code
}

func (m *SBank) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *SBank) GetAmount() uint32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *SBank) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *SBank) GetBalance() uint32 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *SBank) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SBank_Error
}

type CPing struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1050" json:"code,omitempty"`
	Time             *uint32 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPing) Reset()                    { *m = CPing{} }
func (m *CPing) String() string            { return proto.CompactTextString(m) }
func (*CPing) ProtoMessage()               {}
func (*CPing) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

const Default_CPing_Code uint32 = 1050

func (m *CPing) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPing_Code
}

func (m *CPing) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type SPing struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1050" json:"code,omitempty"`
	Time             *uint32 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SPing) Reset()                    { *m = SPing{} }
func (m *SPing) String() string            { return proto.CompactTextString(m) }
func (*SPing) ProtoMessage()               {}
func (*SPing) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

const Default_SPing_Code uint32 = 1050
const Default_SPing_Error uint32 = 0

func (m *SPing) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPing_Code
}

func (m *SPing) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *SPing) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPing_Error
}

type CBankrupts struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1052" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBankrupts) Reset()                    { *m = CBankrupts{} }
func (m *CBankrupts) String() string            { return proto.CompactTextString(m) }
func (*CBankrupts) ProtoMessage()               {}
func (*CBankrupts) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

const Default_CBankrupts_Code uint32 = 1052

func (m *CBankrupts) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CBankrupts_Code
}

type SBankrupts struct {
	Code             *uint32  `protobuf:"varint,1,opt,name=code,def=1052" json:"code,omitempty"`
	Relieve          *uint32  `protobuf:"varint,2,opt,name=relieve" json:"relieve,omitempty"`
	Bankrupt         *uint32  `protobuf:"varint,3,opt,name=bankrupt" json:"bankrupt,omitempty"`
	List             []*Prize `protobuf:"bytes,4,rep,name=list" json:"list,omitempty"`
	Error            *uint32  `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SBankrupts) Reset()                    { *m = SBankrupts{} }
func (m *SBankrupts) String() string            { return proto.CompactTextString(m) }
func (*SBankrupts) ProtoMessage()               {}
func (*SBankrupts) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

const Default_SBankrupts_Code uint32 = 1052
const Default_SBankrupts_Error uint32 = 0

func (m *SBankrupts) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBankrupts_Code
}

func (m *SBankrupts) GetRelieve() uint32 {
	if m != nil && m.Relieve != nil {
		return *m.Relieve
	}
	return 0
}

func (m *SBankrupts) GetBankrupt() uint32 {
	if m != nil && m.Bankrupt != nil {
		return *m.Bankrupt
	}
	return 0
}

func (m *SBankrupts) GetList() []*Prize {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SBankrupts) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SBankrupts_Error
}

type CPrizeList struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1053" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPrizeList) Reset()                    { *m = CPrizeList{} }
func (m *CPrizeList) String() string            { return proto.CompactTextString(m) }
func (*CPrizeList) ProtoMessage()               {}
func (*CPrizeList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

const Default_CPrizeList_Code uint32 = 1053

func (m *CPrizeList) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPrizeList_Code
}

type SPrizeList struct {
	Code             *uint32  `protobuf:"varint,1,opt,name=code,def=1053" json:"code,omitempty"`
	List             []*Prize `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Error            *uint32  `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SPrizeList) Reset()                    { *m = SPrizeList{} }
func (m *SPrizeList) String() string            { return proto.CompactTextString(m) }
func (*SPrizeList) ProtoMessage()               {}
func (*SPrizeList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{16} }

const Default_SPrizeList_Code uint32 = 1053
const Default_SPrizeList_Error uint32 = 0

func (m *SPrizeList) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPrizeList_Code
}

func (m *SPrizeList) GetList() []*Prize {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SPrizeList) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPrizeList_Error
}

type CPrizeDraw struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1054" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPrizeDraw) Reset()                    { *m = CPrizeDraw{} }
func (m *CPrizeDraw) String() string            { return proto.CompactTextString(m) }
func (*CPrizeDraw) ProtoMessage()               {}
func (*CPrizeDraw) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{17} }

const Default_CPrizeDraw_Code uint32 = 1054

func (m *CPrizeDraw) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPrizeDraw_Code
}

type SPrizeDraw struct {
	Code             *uint32  `protobuf:"varint,1,opt,name=code,def=1054" json:"code,omitempty"`
	Leftdraw         *uint32  `protobuf:"varint,2,opt,name=leftdraw" json:"leftdraw,omitempty"`
	Prizedraw        *uint32  `protobuf:"varint,3,opt,name=prizedraw" json:"prizedraw,omitempty"`
	List             []*Prize `protobuf:"bytes,4,rep,name=list" json:"list,omitempty"`
	Error            *uint32  `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SPrizeDraw) Reset()                    { *m = SPrizeDraw{} }
func (m *SPrizeDraw) String() string            { return proto.CompactTextString(m) }
func (*SPrizeDraw) ProtoMessage()               {}
func (*SPrizeDraw) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{18} }

const Default_SPrizeDraw_Code uint32 = 1054
const Default_SPrizeDraw_Error uint32 = 0

func (m *SPrizeDraw) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPrizeDraw_Code
}

func (m *SPrizeDraw) GetLeftdraw() uint32 {
	if m != nil && m.Leftdraw != nil {
		return *m.Leftdraw
	}
	return 0
}

func (m *SPrizeDraw) GetPrizedraw() uint32 {
	if m != nil && m.Prizedraw != nil {
		return *m.Prizedraw
	}
	return 0
}

func (m *SPrizeDraw) GetList() []*Prize {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SPrizeDraw) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPrizeDraw_Error
}

type CPrizeBox struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1055" json:"code,omitempty"`
	State            *uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPrizeBox) Reset()                    { *m = CPrizeBox{} }
func (m *CPrizeBox) String() string            { return proto.CompactTextString(m) }
func (*CPrizeBox) ProtoMessage()               {}
func (*CPrizeBox) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{19} }

const Default_CPrizeBox_Code uint32 = 1055

func (m *CPrizeBox) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPrizeBox_Code
}

func (m *CPrizeBox) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type SPrizeBox struct {
	Code             *uint32  `protobuf:"varint,1,opt,name=code,def=1055" json:"code,omitempty"`
	Time             *uint32  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Duration         *uint32  `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	State            *uint32  `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	List             []*Prize `protobuf:"bytes,5,rep,name=list" json:"list,omitempty"`
	Next             []*Prize `protobuf:"bytes,6,rep,name=next" json:"next,omitempty"`
	Error            *uint32  `protobuf:"varint,7,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SPrizeBox) Reset()                    { *m = SPrizeBox{} }
func (m *SPrizeBox) String() string            { return proto.CompactTextString(m) }
func (*SPrizeBox) ProtoMessage()               {}
func (*SPrizeBox) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{20} }

const Default_SPrizeBox_Code uint32 = 1055
const Default_SPrizeBox_Error uint32 = 0

func (m *SPrizeBox) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPrizeBox_Code
}

func (m *SPrizeBox) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *SPrizeBox) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *SPrizeBox) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *SPrizeBox) GetList() []*Prize {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SPrizeBox) GetNext() []*Prize {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *SPrizeBox) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPrizeBox_Error
}

type CClassicList struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1060" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CClassicList) Reset()                    { *m = CClassicList{} }
func (m *CClassicList) String() string            { return proto.CompactTextString(m) }
func (*CClassicList) ProtoMessage()               {}
func (*CClassicList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{21} }

const Default_CClassicList_Code uint32 = 1060

func (m *CClassicList) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CClassicList_Code
}

type SClassicList struct {
	Code             *uint32    `protobuf:"varint,1,opt,name=code,def=1060" json:"code,omitempty"`
	List             []*Classic `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Error            *uint32    `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SClassicList) Reset()                    { *m = SClassicList{} }
func (m *SClassicList) String() string            { return proto.CompactTextString(m) }
func (*SClassicList) ProtoMessage()               {}
func (*SClassicList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{22} }

const Default_SClassicList_Code uint32 = 1060
const Default_SClassicList_Error uint32 = 0

func (m *SClassicList) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SClassicList_Code
}

func (m *SClassicList) GetList() []*Classic {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SClassicList) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SClassicList_Error
}

type CVipList struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1062" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVipList) Reset()                    { *m = CVipList{} }
func (m *CVipList) String() string            { return proto.CompactTextString(m) }
func (*CVipList) ProtoMessage()               {}
func (*CVipList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{23} }

const Default_CVipList_Code uint32 = 1062

func (m *CVipList) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CVipList_Code
}

type SVipList struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1062" json:"code,omitempty"`
	List             []*Vip  `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SVipList) Reset()                    { *m = SVipList{} }
func (m *SVipList) String() string            { return proto.CompactTextString(m) }
func (*SVipList) ProtoMessage()               {}
func (*SVipList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{24} }

const Default_SVipList_Code uint32 = 1062
const Default_SVipList_Error uint32 = 0

func (m *SVipList) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SVipList_Code
}

func (m *SVipList) GetList() []*Vip {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SVipList) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SVipList_Error
}

type SPushVip struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1063" json:"code,omitempty"`
	Level            *uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Number           *uint32 `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SPushVip) Reset()                    { *m = SPushVip{} }
func (m *SPushVip) String() string            { return proto.CompactTextString(m) }
func (*SPushVip) ProtoMessage()               {}
func (*SPushVip) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{25} }

const Default_SPushVip_Code uint32 = 1063

func (m *SPushVip) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPushVip_Code
}

func (m *SPushVip) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *SPushVip) GetNumber() uint32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*CConfig)(nil), "protocol.CConfig")
	proto.RegisterType((*SConfig)(nil), "protocol.SConfig")
	proto.RegisterType((*CUserData)(nil), "protocol.CUserData")
	proto.RegisterType((*SUserData)(nil), "protocol.SUserData")
	proto.RegisterType((*CGetCurrency)(nil), "protocol.CGetCurrency")
	proto.RegisterType((*SGetCurrency)(nil), "protocol.SGetCurrency")
	proto.RegisterType((*CBuildAgent)(nil), "protocol.CBuildAgent")
	proto.RegisterType((*SBuildAgent)(nil), "protocol.SBuildAgent")
	proto.RegisterType((*SPushCurrency)(nil), "protocol.SPushCurrency")
	proto.RegisterType((*CBank)(nil), "protocol.CBank")
	proto.RegisterType((*SBank)(nil), "protocol.SBank")
	proto.RegisterType((*CPing)(nil), "protocol.CPing")
	proto.RegisterType((*SPing)(nil), "protocol.SPing")
	proto.RegisterType((*CBankrupts)(nil), "protocol.CBankrupts")
	proto.RegisterType((*SBankrupts)(nil), "protocol.SBankrupts")
	proto.RegisterType((*CPrizeList)(nil), "protocol.CPrizeList")
	proto.RegisterType((*SPrizeList)(nil), "protocol.SPrizeList")
	proto.RegisterType((*CPrizeDraw)(nil), "protocol.CPrizeDraw")
	proto.RegisterType((*SPrizeDraw)(nil), "protocol.SPrizeDraw")
	proto.RegisterType((*CPrizeBox)(nil), "protocol.CPrizeBox")
	proto.RegisterType((*SPrizeBox)(nil), "protocol.SPrizeBox")
	proto.RegisterType((*CClassicList)(nil), "protocol.CClassicList")
	proto.RegisterType((*SClassicList)(nil), "protocol.SClassicList")
	proto.RegisterType((*CVipList)(nil), "protocol.CVipList")
	proto.RegisterType((*SVipList)(nil), "protocol.SVipList")
	proto.RegisterType((*SPushVip)(nil), "protocol.SPushVip")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 706 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x55, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xb6, 0x64, 0x6d, 0xef, 0x56, 0x21, 0x22, 0x04, 0xd5, 0xc4, 0xc3, 0xc8, 0x60, 0xea,
	0xd3, 0x54, 0x36, 0x36, 0x21, 0x10, 0x42, 0x2c, 0x93, 0x78, 0x41, 0x68, 0x4a, 0x04, 0x12, 0x6f,
	0x64, 0x8d, 0xd7, 0x59, 0xa4, 0x49, 0xe5, 0x38, 0x63, 0xe3, 0xa7, 0xf0, 0xc0, 0x4f, 0xe2, 0x37,
	0x71, 0xed, 0xd8, 0xf1, 0x3e, 0xdc, 0x36, 0x08, 0x89, 0xa7, 0xf6, 0xd8, 0xc7, 0xf7, 0x9e, 0x7b,
	0x72, 0xaf, 0x0d, 0x50, 0x95, 0x84, 0xed, 0xce, 0x58, 0xc1, 0x0b, 0xbf, 0x2b, 0x7f, 0xc6, 0x45,
	0xb6, 0xd9, 0xbd, 0x28, 0xea, 0xb5, 0x60, 0x1b, 0x3a, 0x61, 0x58, 0xe4, 0x67, 0x74, 0xe2, 0x0f,
	0xc0, 0x1d, 0x17, 0x29, 0x19, 0x38, 0x5b, 0xce, 0xb0, 0xff, 0xca, 0x7d, 0x3e, 0xda, 0x1b, 0x45,
	0x72, 0x25, 0xf8, 0x02, 0x9d, 0x78, 0x19, 0xc9, 0xdf, 0x84, 0x2e, 0x9d, 0x26, 0x13, 0x52, 0xb1,
	0x6c, 0xb0, 0xb2, 0xb5, 0x32, 0xec, 0x45, 0x0d, 0xc6, 0x53, 0x9d, 0x0b, 0xc2, 0x4a, 0x5a, 0xe4,
	0x83, 0x55, 0xb9, 0xa5, 0x61, 0xf0, 0x06, 0x7a, 0xe1, 0x27, 0x94, 0x78, 0x9c, 0xf0, 0xc4, 0x12,
	0x7c, 0x4f, 0x05, 0x7f, 0x08, 0x6b, 0xa2, 0x10, 0x9a, 0xaa, 0xd0, 0x0a, 0x05, 0x67, 0xd0, 0x8b,
	0x5b, 0x1c, 0xdf, 0x01, 0x37, 0x45, 0x06, 0x1e, 0x76, 0x86, 0xeb, 0x7b, 0xfe, 0xae, 0x36, 0x62,
	0x57, 0x9f, 0x8d, 0xe4, 0xbe, 0xff, 0x08, 0x3c, 0xc2, 0x58, 0xc1, 0x50, 0xa5, 0x08, 0xe1, 0x8c,
	0xa2, 0x1a, 0x07, 0x43, 0xd8, 0x08, 0xdf, 0x13, 0x1e, 0x56, 0x8c, 0x91, 0x7c, 0x7c, 0x65, 0x49,
	0xf5, 0x42, 0x79, 0xc5, 0x60, 0x23, 0x6e, 0xc5, 0xf4, 0x7d, 0xb1, 0x43, 0x73, 0x29, 0xaa, 0x1f,
	0xc9, 0xff, 0xc2, 0xa8, 0x94, 0x26, 0xd3, 0x22, 0x4f, 0x6b, 0x09, 0x91, 0x86, 0xc2, 0x5e, 0x56,
	0x14, 0xd3, 0x71, 0xc2, 0xd2, 0x81, 0x2b, 0xb7, 0x1a, 0x1c, 0xbc, 0x85, 0xf5, 0xf0, 0xa8, 0xa2,
	0x59, 0xfa, 0x6e, 0x42, 0x72, 0x6e, 0x49, 0x79, 0xb8, 0xc4, 0x46, 0x0c, 0x10, 0xb7, 0x0d, 0xc0,
	0x48, 0x59, 0x65, 0x5c, 0x06, 0xe8, 0x47, 0x0a, 0x05, 0x53, 0xe8, 0xc7, 0x27, 0x55, 0x79, 0xbe,
	0xa0, 0xec, 0x97, 0x2a, 0xc4, 0x03, 0xf0, 0x18, 0xbf, 0x9a, 0x11, 0x15, 0xa1, 0x06, 0xb7, 0x0b,
	0xf7, 0x4c, 0xe1, 0xda, 0x26, 0x57, 0x2e, 0xcb, 0xff, 0xc1, 0x04, 0xbc, 0xf0, 0x28, 0xc9, 0xbf,
	0xdd, 0x4d, 0xb3, 0x3f, 0x5a, 0x98, 0x06, 0xf5, 0x63, 0xd4, 0x2a, 0xe7, 0xca, 0x5e, 0x85, 0xae,
	0x19, 0x23, 0xd2, 0x18, 0x63, 0x7e, 0x3a, 0xe0, 0xc5, 0xff, 0x23, 0x93, 0x30, 0xe0, 0x34, 0xc9,
	0x92, 0x7c, 0x4c, 0x06, 0x5e, 0xfd, 0xe5, 0x15, 0x34, 0x4d, 0xb9, 0x76, 0xab, 0x29, 0x0f, 0xd0,
	0x85, 0x13, 0x9a, 0x5b, 0x86, 0xf2, 0x60, 0x64, 0x7a, 0x8c, 0xd3, 0x29, 0xd1, 0x3d, 0x26, 0xfe,
	0x07, 0x1f, 0xb1, 0xa4, 0xbf, 0x3f, 0x36, 0x7f, 0x36, 0x76, 0x00, 0xe4, 0xc7, 0x60, 0xd5, 0x8c,
	0x97, 0x96, 0xa0, 0x6a, 0x08, 0x85, 0x97, 0x10, 0xb7, 0x20, 0x0a, 0x2b, 0x18, 0xc9, 0x28, 0xb9,
	0xd0, 0x02, 0x34, 0x14, 0x43, 0x70, 0xaa, 0x02, 0x28, 0x5b, 0x1b, 0xec, 0x6f, 0x83, 0x9b, 0xd1,
	0x92, 0xa3, 0xad, 0xab, 0x38, 0xe3, 0xf7, 0xcc, 0x8c, 0x9f, 0x30, 0xfa, 0x83, 0x44, 0x72, 0xd3,
	0x14, 0xe1, 0x59, 0x8a, 0x90, 0xc4, 0x0f, 0x82, 0x76, 0x57, 0xdb, 0xbe, 0x2a, 0x22, 0xc5, 0x1a,
	0x5a, 0xf0, 0x1a, 0x35, 0x2b, 0xad, 0xd4, 0xac, 0xce, 0x53, 0x73, 0xcc, 0x92, 0xef, 0x96, 0x2c,
	0xfa, 0xb2, 0xf9, 0xe5, 0x68, 0x39, 0x8b, 0x89, 0xc2, 0xb8, 0x8c, 0x9c, 0xf1, 0x14, 0x59, 0xca,
	0xd3, 0x06, 0xfb, 0x8f, 0xa1, 0x37, 0x13, 0x21, 0xe4, 0x66, 0xed, 0xaa, 0x59, 0xf8, 0x47, 0x5b,
	0x5f, 0xe3, 0xf5, 0x2e, 0x89, 0x47, 0xc5, 0xa5, 0x45, 0xde, 0x81, 0x19, 0xa1, 0x92, 0x27, 0x5c,
	0x7f, 0xef, 0x1a, 0x04, 0xbf, 0x1d, 0xbc, 0xdd, 0x5b, 0x9c, 0xb6, 0x75, 0x2b, 0x16, 0x9c, 0x56,
	0x2c, 0xe1, 0xf5, 0x93, 0x23, 0x0b, 0xd6, 0xd8, 0x64, 0x73, 0xaf, 0x65, 0x6b, 0x0a, 0xf5, 0x16,
	0x15, 0x8a, 0xa4, 0x9c, 0x5c, 0x72, 0x1c, 0x45, 0x3b, 0x49, 0x6c, 0x1a, 0x37, 0x3a, 0x96, 0x57,
	0x24, 0xcc, 0x92, 0xb2, 0xa4, 0x63, 0x7b, 0xfb, 0x1c, 0xea, 0x17, 0xf7, 0x1c, 0x5f, 0x91, 0x56,
	0x4c, 0xff, 0xd9, 0x8d, 0x46, 0xbb, 0x6f, 0x14, 0xa9, 0xe3, 0xcb, 0x5a, 0xed, 0x29, 0x74, 0xc3,
	0xcf, 0x74, 0x36, 0x27, 0x8b, 0x9e, 0xdd, 0xaf, 0xd0, 0x8d, 0x97, 0xb2, 0xfc, 0x27, 0x37, 0xb4,
	0xf4, 0x8d, 0x16, 0x3c, 0xba, 0x4c, 0x47, 0x84, 0x19, 0xc4, 0x0b, 0x82, 0x54, 0x4b, 0x86, 0x7d,
	0xd3, 0x28, 0x19, 0x5e, 0x04, 0x99, 0x6e, 0x14, 0x09, 0xc4, 0x9d, 0x9a, 0x57, 0xd3, 0x53, 0xc2,
	0xf4, 0x5d, 0x5b, 0xa3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x00, 0x42, 0x85, 0x11, 0xfd, 0x08,
	0x00, 0x00,
}
