// Code generated by protoc-gen-go.
// source: login.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 登陆
type CLogin struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1000" json:"code,omitempty"`
	Phone            *string `protobuf:"bytes,2,req,name=phone" json:"phone,omitempty"`
	Password         *string `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CLogin) Reset()                    { *m = CLogin{} }
func (m *CLogin) String() string            { return proto.CompactTextString(m) }
func (*CLogin) ProtoMessage()               {}
func (*CLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

const Default_CLogin_Code uint32 = 1000

func (m *CLogin) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CLogin_Code
}

func (m *CLogin) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *CLogin) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CLogin) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type SLogin struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1000" json:"code,omitempty"`
	Userid           *string `protobuf:"bytes,2,opt,name=userid" json:"userid,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SLogin) Reset()                    { *m = SLogin{} }
func (m *SLogin) String() string            { return proto.CompactTextString(m) }
func (*SLogin) ProtoMessage()               {}
func (*SLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

const Default_SLogin_Code uint32 = 1000

func (m *SLogin) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SLogin_Code
}

func (m *SLogin) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *SLogin) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return 0
}

// 注册
type CRegist struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1002" json:"code,omitempty"`
	Nickname         *string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Phone            *string `protobuf:"bytes,3,req,name=phone" json:"phone,omitempty"`
	Password         *string `protobuf:"bytes,4,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CRegist) Reset()                    { *m = CRegist{} }
func (m *CRegist) String() string            { return proto.CompactTextString(m) }
func (*CRegist) ProtoMessage()               {}
func (*CRegist) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

const Default_CRegist_Code uint32 = 1002

func (m *CRegist) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CRegist_Code
}

func (m *CRegist) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *CRegist) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *CRegist) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CRegist) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type SRegist struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1002" json:"code,omitempty"`
	Userid           *string `protobuf:"bytes,2,opt,name=userid" json:"userid,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SRegist) Reset()                    { *m = SRegist{} }
func (m *SRegist) String() string            { return proto.CompactTextString(m) }
func (*SRegist) ProtoMessage()               {}
func (*SRegist) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

const Default_SRegist_Code uint32 = 1002

func (m *SRegist) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SRegist_Code
}

func (m *SRegist) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *SRegist) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return 0
}

// 微信登录登陆
type CWxLogin struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1004" json:"code,omitempty"`
	Wxcode           *string `protobuf:"bytes,2,opt,name=wxcode" json:"wxcode,omitempty"`
	Token            *string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	Type             *uint32 `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CWxLogin) Reset()                    { *m = CWxLogin{} }
func (m *CWxLogin) String() string            { return proto.CompactTextString(m) }
func (*CWxLogin) ProtoMessage()               {}
func (*CWxLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

const Default_CWxLogin_Code uint32 = 1004

func (m *CWxLogin) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CWxLogin_Code
}

func (m *CWxLogin) GetWxcode() string {
	if m != nil && m.Wxcode != nil {
		return *m.Wxcode
	}
	return ""
}

func (m *CWxLogin) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CWxLogin) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type SWxLogin struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1004" json:"code,omitempty"`
	Userid           *string `protobuf:"bytes,2,opt,name=userid" json:"userid,omitempty"`
	Token            *string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SWxLogin) Reset()                    { *m = SWxLogin{} }
func (m *SWxLogin) String() string            { return proto.CompactTextString(m) }
func (*SWxLogin) ProtoMessage()               {}
func (*SWxLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

const Default_SWxLogin_Code uint32 = 1004

func (m *SWxLogin) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SWxLogin_Code
}

func (m *SWxLogin) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *SWxLogin) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *SWxLogin) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return 0
}

type SLoginOut struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=1006" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SLoginOut) Reset()                    { *m = SLoginOut{} }
func (m *SLoginOut) String() string            { return proto.CompactTextString(m) }
func (*SLoginOut) ProtoMessage()               {}
func (*SLoginOut) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

const Default_SLoginOut_Code uint32 = 1006

func (m *SLoginOut) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SLoginOut_Code
}

func (m *SLoginOut) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func init() {
	proto.RegisterType((*CLogin)(nil), "protocol.CLogin")
	proto.RegisterType((*SLogin)(nil), "protocol.SLogin")
	proto.RegisterType((*CRegist)(nil), "protocol.CRegist")
	proto.RegisterType((*SRegist)(nil), "protocol.SRegist")
	proto.RegisterType((*CWxLogin)(nil), "protocol.CWxLogin")
	proto.RegisterType((*SWxLogin)(nil), "protocol.SWxLogin")
	proto.RegisterType((*SLoginOut)(nil), "protocol.SLoginOut")
}

func init() { proto.RegisterFile("login.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4f, 0x83, 0x40,
	0x10, 0x85, 0x43, 0xbb, 0xa5, 0x74, 0x8c, 0x97, 0x8d, 0x31, 0x1b, 0x4f, 0x0d, 0xa7, 0x9e, 0x0c,
	0x1a, 0xe3, 0x41, 0x8f, 0x5c, 0x4d, 0x54, 0x38, 0x78, 0x6e, 0x60, 0x2d, 0xa4, 0x75, 0x87, 0x2c,
	0x34, 0xad, 0x3f, 0xc0, 0xff, 0xed, 0xee, 0x40, 0xa0, 0x07, 0x36, 0xd5, 0x13, 0x3c, 0x26, 0x7c,
	0xef, 0xbd, 0xdd, 0x81, 0x8b, 0x1d, 0x6e, 0x4a, 0x75, 0x5b, 0x69, 0x6c, 0x90, 0x07, 0xf4, 0xc8,
	0x70, 0x17, 0x16, 0xe0, 0xc7, 0x2f, 0x76, 0xc2, 0x05, 0xb0, 0x0c, 0x73, 0x29, 0xbc, 0xa5, 0xb7,
	0xba, 0x7c, 0x62, 0x77, 0x51, 0x14, 0x25, 0xf4, 0x85, 0x5f, 0xc1, 0xac, 0x2a, 0x50, 0x49, 0x31,
	0x59, 0x4e, 0x56, 0x8b, 0xa4, 0x15, 0xfc, 0x06, 0x82, 0x6a, 0x5d, 0xd7, 0x07, 0xd4, 0xb9, 0x98,
	0xd2, 0xa0, 0xd7, 0x9c, 0x03, 0x6b, 0xbe, 0x2b, 0x29, 0x98, 0x65, 0x25, 0xf4, 0x1e, 0xbe, 0x81,
	0x9f, 0x9e, 0x73, 0xba, 0x06, 0x7f, 0x5f, 0x4b, 0x5d, 0xe6, 0xc6, 0xca, 0x33, 0xc4, 0x4e, 0xd9,
	0x04, 0x52, 0x6b, 0xd4, 0xc6, 0xc8, 0x02, 0x5b, 0x11, 0xfe, 0x78, 0x30, 0x8f, 0x13, 0xb9, 0x29,
	0xeb, 0x66, 0x84, 0x79, 0xdf, 0x31, 0x4d, 0x4e, 0x55, 0x66, 0x5b, 0xb5, 0xfe, 0x92, 0x1d, 0xb5,
	0xd7, 0x43, 0xb3, 0xa9, 0xab, 0x19, 0x73, 0x34, 0x9b, 0x9d, 0x34, 0x7b, 0x87, 0x79, 0x7a, 0x36,
	0xc6, 0xff, 0xaa, 0x7d, 0x42, 0x10, 0x7f, 0x1c, 0x5d, 0xc7, 0xf5, 0x30, 0x30, 0x0f, 0x47, 0x9a,
	0x75, 0xcc, 0x56, 0x59, 0x66, 0x83, 0x5b, 0xa9, 0x88, 0x69, 0x6a, 0x91, 0x18, 0xbd, 0x94, 0x02,
	0x82, 0xf4, 0x4f, 0x3e, 0xae, 0xec, 0x23, 0x3e, 0x7d, 0x23, 0x76, 0xda, 0xe8, 0x19, 0x16, 0xed,
	0xf5, 0xbf, 0xee, 0xc7, 0x8e, 0xe9, 0x71, 0xd8, 0x35, 0x4d, 0x29, 0xed, 0xae, 0x99, 0x9f, 0x49,
	0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x71, 0x74, 0x65, 0xbd, 0x02, 0x00, 0x00,
}
