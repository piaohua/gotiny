// Code generated by protoc-gen-main.
// source: gen.go
// DO NOT EDIT!

package robots

import (
	"errors"
	"gotiny/protocol"

	"github.com/golang/protobuf/proto"
)

//打包消息
func packet(msg interface{}) (uint32, []byte, error) {
	switch msg.(type) {
	case *protocol.CReady:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4006, b, err
	case *protocol.CBet:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4010, b, err
	case *protocol.CFreeSit:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4044, b, err
	case *protocol.CBuildAgent:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1026, b, err
	case *protocol.CShop:
		b, err := proto.Marshal(msg.(proto.Message))
		return 3010, b, err
	case *protocol.CRegist:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1002, b, err
	case *protocol.CCreateRoom:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4001, b, err
	case *protocol.CVote:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4017, b, err
	case *protocol.CFreeBet:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4046, b, err
	case *protocol.CKick:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4005, b, err
	case *protocol.CFreeTrend:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4051, b, err
	case *protocol.CEnterClassicRoom:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4060, b, err
	case *protocol.CClassicList:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1060, b, err
	case *protocol.CBuy:
		b, err := proto.Marshal(msg.(proto.Message))
		return 3000, b, err
	case *protocol.CGameRecord:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4020, b, err
	case *protocol.CDealerList:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4043, b, err
	case *protocol.CCreateZiRoom:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4101, b, err
	case *protocol.CConfig:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1020, b, err
	case *protocol.CGetCurrency:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1024, b, err
	case *protocol.CPrizeList:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1053, b, err
	case *protocol.CPrizeBox:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1055, b, err
	case *protocol.CWxpayOrder:
		b, err := proto.Marshal(msg.(proto.Message))
		return 3002, b, err
	case *protocol.CWxpayQuery:
		b, err := proto.Marshal(msg.(proto.Message))
		return 3004, b, err
	case *protocol.CEnterRoom:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4000, b, err
	case *protocol.CNiu:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4011, b, err
	case *protocol.CPushDiscard:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4106, b, err
	case *protocol.CUserData:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1022, b, err
	case *protocol.CBankrupts:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1052, b, err
	case *protocol.CApplePay:
		b, err := proto.Marshal(msg.(proto.Message))
		return 3006, b, err
	case *protocol.CLogin:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1000, b, err
	case *protocol.CLaunchVote:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4016, b, err
	case *protocol.CEnterFreeRoom:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4040, b, err
	case *protocol.CGetPrize:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4081, b, err
	case *protocol.CPrizeCards:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4082, b, err
	case *protocol.CEnterZiRoom:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4100, b, err
	case *protocol.CPing:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1050, b, err
	case *protocol.CChatText:
		b, err := proto.Marshal(msg.(proto.Message))
		return 2003, b, err
	case *protocol.CZiGameRecord:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4103, b, err
	case *protocol.COperate:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4108, b, err
	case *protocol.CBank:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1030, b, err
	case *protocol.CVipList:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1062, b, err
	case *protocol.CChatVoice:
		b, err := proto.Marshal(msg.(proto.Message))
		return 2004, b, err
	case *protocol.CNotice:
		b, err := proto.Marshal(msg.(proto.Message))
		return 2008, b, err
	case *protocol.CWxLogin:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1004, b, err
	case *protocol.CLeave:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4004, b, err
	case *protocol.CDealer:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4008, b, err
	case *protocol.CFreeDealer:
		b, err := proto.Marshal(msg.(proto.Message))
		return 4042, b, err
	case *protocol.CPrizeDraw:
		b, err := proto.Marshal(msg.(proto.Message))
		return 1054, b, err
	default:
		return 0, []byte{}, errors.New("unknown msg")
	}
}
